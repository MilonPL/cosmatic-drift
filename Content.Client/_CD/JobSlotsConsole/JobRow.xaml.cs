using Content.Shared.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._CD.JobSlotsConsole;

[GenerateTypedNameReferences]
public sealed partial class JobRow : BoxContainer
{
    [Dependency] private readonly IPrototypeManager _protoManager = default!;
    [Dependency] private readonly IEntitySystemManager _entitySystem = default!;

    public event Action<int>? OnAdjustPressed;

    public string JobName { get; }

    public JobRow(string jobId, int? slots, bool blacklisted)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        var spriteSystem = _entitySystem.GetEntitySystem<SpriteSystem>();

        var proto = _protoManager.Index<JobPrototype>(jobId);
        JobName = Loc.GetString(proto.Name);
        JobNameLabel.Text = JobName;

        // Set up job icon
        if (_protoManager.TryIndex(proto.Icon, out var jobIcon))
        {
            JobIcon.Texture = spriteSystem.Frame0(jobIcon.Icon);
        }

        UpdateSlots(slots, blacklisted);

        DecreaseButton.OnPressed += OnDecrease;
        IncreaseButton.OnPressed += OnIncrease;
    }

    private void OnDecrease(BaseButton.ButtonEventArgs args)
    {
        OnAdjustPressed?.Invoke(-1);
    }

    private void OnIncrease(BaseButton.ButtonEventArgs args)
    {
        OnAdjustPressed?.Invoke(1);
    }

    private void UpdateSlots(int? slots, bool blacklisted)
    {
        SlotsLabel.Text = slots?.ToString() ?? "âˆž";

        // Disable buttons if blacklisted or at limits
        DecreaseButton.Disabled = blacklisted || slots is 0 or null;
        IncreaseButton.Disabled = blacklisted || slots == null;

        if (blacklisted)
        {
            DecreaseButton.ToolTip = Loc.GetString("job-slots-console-blacklisted");
            IncreaseButton.ToolTip = Loc.GetString("job-slots-console-blacklisted");
        }
        else
        {
            DecreaseButton.ToolTip = null;
            IncreaseButton.ToolTip = null;
        }
    }
}
